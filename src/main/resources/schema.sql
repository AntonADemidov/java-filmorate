  DROP TABLE IF EXISTS mpa, films, genres, films_genres, users, likes, friends, directors, film_directors, reviews, review_likes, events_types, operations, feeds CASCADE;

  CREATE TABLE IF NOT EXISTS mpa (
      mpa_id integer PRIMARY KEY,
      name varchar(50) NOT NULL
  );

  CREATE TABLE IF NOT EXISTS directors (
      director_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name varchar(50)
  );

  CREATE TABLE IF NOT EXISTS films (
      film_id integer PRIMARY KEY,
      name varchar(50) NOT NULL,
      description varchar(200) NOT NULL,
      release_date date NOT NULL,
      duration integer NOT NULL,
      mpa_id integer NOT NULL REFERENCES mpa (mpa_id),
      CONSTRAINT "films_release_date" CHECK (release_date >= '1895-12-28'),
      CONSTRAINT "films_duration" CHECK (duration >= '0')
  );

  CREATE TABLE IF NOT EXISTS film_directors (
      id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
      director_id integer NOT NULL REFERENCES directors (director_id) ON DELETE CASCADE
  );

  CREATE TABLE IF NOT EXISTS genres (
      genre_id integer PRIMARY KEY,
      name varchar(50) NOT NULL
  );

  CREATE TABLE IF NOT EXISTS films_genres (
      id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
      genre_id integer NOT NULL REFERENCES genres (genre_id)
  );

  CREATE TABLE IF NOT EXISTS users (
      user_id integer PRIMARY KEY,
      name varchar(50) NOT NULL,
      email varchar(50) NOT NULL,
      login varchar(50) NOT NULL,
      birthday date NOT NULL
  );

  CREATE TABLE IF NOT EXISTS likes (
      id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
      user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE
  );

  CREATE TABLE IF NOT EXISTS friends (
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
      friend_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE
  );

   CREATE TABLE IF NOT EXISTS reviews (
        review_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
        user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
        content varchar(500) NOT NULL,
        useful int,
        isPositive boolean NOT NULL
    );

   CREATE TABLE IF NOT EXISTS review_likes (
            review_id integer NOT NULL REFERENCES reviews (review_id) ON DELETE CASCADE,
            user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
            isUseful int NOT NULL
   );

CREATE TABLE IF NOT EXISTS events_types (
    type_id integer NOT NULL PRIMARY KEY,
    event_name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS operations (
    operation_id integer NOT NULL PRIMARY KEY,
    operation_name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS feeds (
    event_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    time_stamp bigint NOT NULL,
    event_type integer NOT NULL REFERENCES events_types (type_id),
    operation integer NOT NULL REFERENCES operations (operation_id),
    user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    entity_id integer NOT NULL
);